import tkinter as tk
from tkinter import messagebox
import csv
import os
import matplotlib.pyplot as plt

def calculate_bmi():
    try:
        weight = float(entry_weight.get())
        height = float(entry_height.get())

        if weight <= 0 or height <= 0:
            raise ValueError

        bmi = weight / (height ** 2)
        category = classify_bmi(bmi)

        result_label.config(text=f"BMI: {bmi:.2f} ({category})")

        # Save to CSV
        save_data(weight, height, bmi, category)

    except ValueError:
        messagebox.showerror("Invalid Input", "Please enter valid positive numbers.")

def classify_bmi(bmi):
    if bmi < 18.5:
        return "Underweight"
    elif bmi < 24.9:
        return "Normal"
    elif bmi < 29.9:
        return "Overweight"
    else:
        return "Obese"

def save_data(weight, height, bmi, category):
    file_exists = os.path.isfile("bmi_data.csv")
    with open("bmi_data.csv", mode="a", newline="") as file:
        writer = csv.writer(file)
        if not file_exists:
            writer.writerow(["Weight", "Height", "BMI", "Category"])
        writer.writerow([weight, height, round(bmi, 2), category])

def show_graph():
    if not os.path.exists("bmi_data.csv"):
        messagebox.showinfo("No Data", "No data available to visualize.")
        return

    weights = []
    bmis = []

    with open("bmi_data.csv", mode="r") as file:
        reader = csv.DictReader(file)
        for row in reader:
            weights.append(float(row["Weight"]))
            bmis.append(float(row["BMI"]))

    plt.plot(weights, bmis, marker='o', color='teal')
    plt.title("BMI Trend")
    plt.xlabel("Weight (kg)")
    plt.ylabel("BMI")
    plt.grid(True)
    plt.show()

# GUI Setup
app = tk.Tk()
app.title("BMI Calculator")
app.geometry("300x250")

tk.Label(app, text="Enter weight (kg):").pack()
entry_weight = tk.Entry(app)
entry_weight.pack()

tk.Label(app, text="Enter height (m):").pack()
entry_height = tk.Entry(app)
entry_height.pack()

tk.Button(app, text="Calculate BMI", command=calculate_bmi).pack(pady=5)
result_label = tk.Label(app, text="")
result_label.pack()

tk.Button(app, text="Show Graph", command=show_graph).pack(pady=5)

app.mainloop()
